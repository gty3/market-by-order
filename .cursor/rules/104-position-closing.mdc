# Position Closing Mechanics

## Context
- Trading system requires explicit position closing through opposing orders
- No direct "target" or "take-profit" parameters exist in order placement
- Applies to all trading algorithms implementing exit logic
- Outstanding limit orders must be cancelled using same-side limit orders at the same price
- Stop loss orders will automatically close both the position and any outstanding limit orders

## Requirements
- Positions can ONLY be closed through:
  1. Placing an opposing limit order (Ask to close Bid, Bid to close Ask)
  2. Placing an opposing market order (Sell to close Buy, Buy to close Sell)
  3. Stop loss trigger (automatically closes position and cancels outstanding limit orders)
- Exit prices must be explicitly calculated and specified
- Take profit levels must be implemented via separate opposing orders
- Stop loss will automatically handle position closure and limit order cancellation
- Each algorithm must handle its own position closing logic (except for stop loss automation)
- MUST cancel outstanding limit orders by placing same-side limit orders at the same price (Ask to cancel Ask, Bid to cancel Bid)

## Examples

<example>
// Correct: Implementing take profit with proper cleanup and stop loss
if (state.userTrade && !state.offerLimitOrder) {
  if (state.userTrade.side === "Bid") {
    // Close long position with sell limit order
    const exitPrice = state.userTrade.price + (state.instrument.increment * 4)
    placeLimitOrder({
      type: "Ask",
      price: exitPrice,
      stoploss: state.userTrade.price - (state.instrument.increment * 2) // Stop loss will auto-close position
    })
  }
} else if (!state.userTrade && state.offerLimitOrder) {
  // Clean up outstanding Ask order with same-side (Ask) limit at same price
  placeLimitOrder({
    type: "Ask",  // Same type as the order we want to cancel
    price: state.offerLimitOrder.price,
    stoploss: 4
  })
}
</example>

<example type="invalid">
// Incorrect: Using opposing type to cancel limit order
if (!state.userTrade && state.offerLimitOrder) {
  placeLimitOrder({
    type: "Bid",  // ❌ Wrong: Using opposite type to cancel Ask limit
    price: state.offerLimitOrder.price,
    stoploss: 4
  })
}

// Also incorrect: Using market order to cancel limit
placeMarketOrder({
  type: "Buy"  // ❌ Wrong: Using market order to cancel limit
})
</example>

<critical>
- NEVER use target/take-profit parameters in order placement
- ALWAYS implement exits via explicit opposing orders
- ENSURE proper tracking of position state before placing exit orders
- ALWAYS cancel limit orders with same-side limits at the same price
- NEVER use market orders or opposing limits to cancel limit orders
- REMEMBER stop loss will automatically close positions and cancel outstanding limit orders
</critical> 